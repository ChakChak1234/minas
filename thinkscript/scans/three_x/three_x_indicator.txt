Yes, you can scan but not using the whole Three_X_Indicator script, as it is too complex. But you could use the part of the code and construct the scan for pBUY and pSELL, you'll never be able to scan for sBUY or sSELL as it uses rec variables and a day look ahead. I broke out the essential part of the script and installed in a chart study called #Three_X_Scan # Must assign this name because it is referenced in the scan code 

declare lower; 

 

input K_period        = 10; 

input D_period        = 10; 

input SlowTrendLength = 3; 

input smoothing_type  = { default EMA, SMA }; 

input stochastic_type = { FAST, default SLOW }; 

 

def aggPer            = getAggregationPeriod(); 

def adjAggPer         = if aggPer == AggregationPeriod.MIN then 

                          AggregationPeriod.THREE_MIN 

                        else if aggPer == AggregationPeriod.TWO_MIN then 

                          AggregationPeriod.FIVE_MIN 

                        else if aggPer == AggregationPeriod.THREE_MIN then 

                          AggregationPeriod.TEN_MIN 

                        else if aggPer == AggregationPeriod.FOUR_MIN then 

                          AggregationPeriod.TEN_MIN 

                        else if aggPer == AggregationPeriod.FIVE_MIN then 

                          AggregationPeriod.FIFTEEN_MIN 

                        else if aggPer == AggregationPeriod.TEN_MIN then 

                          AggregationPeriod.THIRTY_MIN 

                        else if aggPer == AggregationPeriod.FIFTEEN_MIN then 

                          AggregationPeriod.HOUR 

                        else if aggPer == AggregationPeriod.TWENTY_MIN then 

                          AggregationPeriod.HOUR 

                        else if aggPer == AggregationPeriod.THIRTY_MIN then 

                          AggregationPeriod.TWO_HOURS 

                        else if aggPer == AggregationPeriod.HOUR then 

                          AggregationPeriod.FOUR_HOURS 

                        else if aggPer == AggregationPeriod.TWO_HOURS then 

                          AggregationPeriod.DAY 

                        else if aggPer == AggregationPeriod.FOUR_HOURS then 

                          AggregationPeriod.DAY 

                        else if aggPer == AggregationPeriod.DAY then 

                          AggregationPeriod.THREE_DAYS 

                        else if aggPer == AggregationPeriod.TWO_DAYS then 

                          AggregationPeriod.WEEK 

                        else if aggPer == AggregationPeriod.THREE_DAYS then 

                          AggregationPeriod.WEEK 

                        else if aggPer == AggregationPeriod.FOUR_DAYS then 

                          AggregationPeriod.MONTH 

                        else if aggPer == AggregationPeriod.WEEK then 

                          AggregationPeriod.MONTH 

                        else if aggPer == AggregationPeriod.MONTH then 

                          AggregationPeriod.MONTH 

                        else 

                          Double.NaN; 

 

def _kPeriod; 

def _dPeriod; 

def _slowTrendLength; 

if aggPer == AggregationPeriod.MONTH then { 

  _kPeriod          = K_period * 3; 

  _dPeriod          = D_period * 3; 

  _slowTrendLength  = SlowTrendLength * 3; 

} else { 

  _kPeriod          = K_period; 

  _dPeriod          = D_period; 

  _slowTrendLength  = SlowTrendLength; 

} 

 

def priceH            = high( period = adjAggPer ); 

def priceL            = low( period = adjAggPer ); 

def priceC            = close( period = adjAggPer ); 

 

def lowest_low        = lowest( low, _kPeriod ); 

def highest_high      = highest( high, _kPeriod ); 

def fastK             = if ( highest_high - lowest_low ) <= 0 then 0 else 100 * ( close - lowest_low ) / ( highest_high - lowest_low ); 

def fastD             = if smoothing_type == smoothing_type.EMA then ExpAverage( fastK, _dPeriod ) else Average( fastK, _dPeriod ); 

def slowK             = fastD; 

def slowD             = if smoothing_type == smoothing_type.EMA then ExpAverage( slowK, _dPeriod ) else Average( slowK, _dPeriod ); 

 

#---Stochastic 

plot stochD            = if stochastic_type == stochastic_type.FAST then fastD else slowD; 

stochD.SetPaintingStrategy( PaintingStrategy.POINTS ); 

stochD.AssignValueColor( if stochD >= stochD[1] then Color.CYAN else if stochD < stochD[1] then Color.BLUE else Color.GRAY ); 

 

######### Scans ##################### 

Here's the scan/custom column for pBUY: 

def tresX = Three_X_Scan().stochD; 

plot scan3x = tresX > 25 and tresX[1] <= 25;#ie cross of 25 

 

And wonders of wonders, this scan worked and it found 71 stocks on a day aggregation period. 

 

Here's the scan/custom column for pSELL: 

def tresX = Three_X_Scan().stochD; 

plot scan3x = tresX < 85 and tresX[1] >= 85; 