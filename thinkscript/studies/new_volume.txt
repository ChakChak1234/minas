declare lower;
declare hide_on_daily;

input factor = 1;
def v = volume;
#########
# Hours
#########
def ext_hours =  GetTime() < RegularTradingStart(GetYYYYMMDD())
             or GetTime() > RegularTradingEnd(GetYYYYMMDD()) ;
def morning_hours =  GetTime() < RegularTradingStart(GetYYYYMMDD());
def night_hours = GetTime() > RegularTradingEnd(GetYYYYMMDD());
def rth = GetTime() > RegularTradingStart(GetYYYYMMDD())
          and GetTime() < RegularTradingEnd(GetYYYYMMDD());

#######################
# RTH Hours Volume
#######################
def ticks = if rth and !rth[1]
             then 1
         else if rth
              then ticks[1] + 1
         else ticks[1];

def rth_vol = if GetDay() != GetDay()[1]
             then v
         else if rth
              then rth_vol[1] + v
         else rth_vol[1];

def yesterday_avg = Average(volume(period="DAY"), 3)[1];
def percent_yesterday_avg_vol = (rth_vol / yesterday_avg);


#######
# Rules
########
def rth_volume_rules =
    if Highest(Average(rth_vol, 3), 10) > 10000
       and percent_yesterday_avg_vol > factor
    then
        rth_volume_rules[1] + 1
    else 0;

def today_volume_rules =
    if Highest(Average(rth_vol, 3), 10) > 10000
       and percent_yesterday_avg_vol > factor
    then
        rth_volume_rules[1] + 1
    else 0;


def day_rules = 
  if
    rth_volume_rules > 0
    then
        1
  else if day_rules[1] > 2
    then
        #day_rules[1] - 2
        0
  else 0;

########
# Scan
########
plot scan = if day_rules > 0 then day_rules else Double.NaN;
#plot s = percent_yesterday_avg_vol;

