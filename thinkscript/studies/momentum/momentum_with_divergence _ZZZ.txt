## Archive Name: Momentum with Divergence _ZZZ 
## Archive Section: Momentum 
## Suggested Tos Name: MomentumWithDivergence_ZZZ 
## Archive Date: 5.13.2018 
## Archive Notes:  

## "##" indicates an addition by the Archivist 

# Momentum (28 period) with Divergence 
# ZZZ 
# 06.12.2015 
# 
# Momentum indicator substituted into Mobius MACD Divergence script 
# Mobius' designed this as a bolt-on script and will work with any oscillator. 
# http://tos.mx/utrr5E 

declare lower; 
input length = 28; 
input price = close; 

assert(length > 0, "'length' must be positive: " + length); 
plot Momentum = price - price[length]; 
plot ZeroLine = 0; 

Momentum.SetDefaultColor(GetColor(1)); 
ZeroLine.SetDefaultColor(GetColor(0)); 

# MACD Divergence Pivots 
# Mobius 
# V02.05.2015 
# Added Bar color to match MACD color so divergence is obvious. Altered fold expressions.   

input n = 20; 
def bar = barNumber(); 
def diff = momentum; 
def CurrMACDh = 
	if Diff > 0 
	then fold i = 1 to n + 1  
		with p = 1 
		while p  
		do Diff > getValue(Diff, -i) 
	else 0;  

def CurrMACDPivotH = 
	if (bar > n 
	    and Diff == highest(Diff, n)
	    and CurrMACDh)  
	then Diff  
	else double.NaN; 


def CurrMACDl = 
	if Diff < 0 
	then fold j = 1 to n + 1  
			with q = 1 
			while q  
			do Diff < getValue(Diff, -j) 
	else 0; 


def CurrMACDPivotL =
	if (bar > n 
		and Diff == lowest(Diff, n)
		and CurrMACDl)  
	then Diff
	else double.NaN; 

def CurrPHBar = 
	if !isNaN(CurrMACDPivotH) then bar  
	else CurrPHBar[1]; 

def CurrPLBar = 
	if !isNaN(CurrMACDPivotL) then bar  
	else CurrPLBar[1]; 

def PHpoint = if 
	!isNaN(CurrMACDPivotH) then CurrMACDPivotH  
	else PHpoint[1]; 

def priorPHBar = 
	if PHpoint != PHpoint[1] then CurrPHBar[1]  
	else priorPHBar[1]; 

def PLpoint = 
	if !isNaN(CurrMACDPivotL) then CurrMACDPivotL  
	else PLpoint[1]; 


def priorPLBar = 
	if PLpoint != PLpoint[1] then CurrPLBar[1]
	else priorPLBar[1]; 

def HighPivots = bar >= highestAll(priorPHBar); 
def LowPivots = bar >= highestAll(priorPLBar); 
def pivotHigh =
	if HighPivots then CurrMACDPivotH  
	else double.NaN; 

plot PlotHline = pivotHigh; 
PlotHline.enableApproximation(); 
PlotHline.SetDefaultColor(GetColor(7)); 
PlotHline.SetStyle(Curve.Short_DASH); 
plot pivotLow =
	if LowPivots then CurrMACDPivotL  
	else double.NaN; 

pivotLow.enableApproximation(); 
pivotLow.SetDefaultColor(GetColor(7)); 
pivotLow.SetStyle(Curve.Short_DASH); 

plot PivotDot =
	if !isNaN(pivotHigh) then pivotHigh  
	else if !isNaN(pivotLow) then pivotLow 
	else double.NaN; 

pivotDot.SetDefaultColor(GetColor(7)); 
pivotDot.SetPaintingStrategy(PaintingStrategy.POINTS); 
pivotDot.SetLineWeight(3); 