## OneNote Archive Name: TMO True Momentum Oscillator with Higher Aggregation _Mobius 
## Archive Section: Momentum 
## Suggested Tos Name: TrueMomentumOscillator_w_HigherAggregation_Mobius 
## Archive Date: 5.15.2018 
## Archive Notes:  
## 08:43 Mobius: Well give it a few days to get altered, muched, distorted and twisted. Then when it get back to being used as intended someone will start making money with it. 
## 08:45 Mobius: Oh and in my view - It's highest and best use is as designed with a secondary aggregation plotted either on it or with it around 5 to 10 time higher. 

## "##" indicates an addition or adjustment by the OneNote Archivist 
## Original Code Follows 

# TMO ((T)rue (M)omentum (O)scillator) With Higher Aggregation 
# Mobius 
# V01.05.2018 

#hint: TMO calculates momentum using the delta of price. Giving a much better picture of trend, tend reversals and divergence than momentum oscillators using price. 

declare Lower; 

input length = 14; 
input calcLength = 5; 
input smoothLength = 3; 
input agg = AggregationPeriod.Fifteen_min; 

def o = open(period = agg); 
def c = close(period = agg); 
def data = fold i = 0 to length 
           with s 
           do s + (if c > getValue(o, i) 
                   then 1 
                   else if c < getValue(o, i) 
                        then - 1 
                        else 0); 
def EMA5 = ExpAverage(data, calcLength); 
plot Main = ExpAverage(EMA5, smoothLength); 
plot Signal = ExpAverage(Main, smoothLength); 
     Main.AssignValueColor(if Main > Signal 
                           then color.green 
                           else color.red); 
     Signal.AssignValueColor(if Main > Signal 
                             then color.green 
                             else color.red); 
     Signal.HideBubble(); 
     Signal.HideTitle(); 
addCloud(Main, Signal, color.green, color.red); 
plot zero = if isNaN(c) then double.nan else 0; 
     zero.SetDefaultColor(Color.gray); 
     zero.hideBubble(); 
     zero.hideTitle(); 
plot ob = if isNaN(c) then double.nan else round(length * .7); 
     ob.SetDefaultColor(Color.gray); 
     ob.HideBubble(); 
     ob.HideTitle(); 
plot os = if isNaN(c) then double.nan else -round(length * .7); 
     os.SetDefaultColor(Color.gray); 
     os.HideBubble(); 
     os.HideTitle(); 
addCloud(ob, length, color.light_red, color.light_red, no); 
addCloud(-length, os, color.light_green, color.light_green); 
# End Code TMO with Higher Aggregation 



#
#
#
# Code from TMO without aggregation 
#
#

input length = 14; 
input calcLength = 5; 
input smoothLength = 3; 
 
def o = open; 
def c = close; 
def data = fold i = 0 to length 
           with s 
           do s + (if c > getValue(o, i) 
                   then 1 
                   else if c < getValue(o, i) 
                        then - 1 
                        else 0); 