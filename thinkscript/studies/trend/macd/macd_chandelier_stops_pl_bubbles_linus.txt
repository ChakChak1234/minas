
## Note: v0.2 uses atrLength to get the ATR.  (v0.1 was using the default of 12.) 


## START STUDY 
## MACD_Chandelier_Stops 
## linus, 2014-07-22, v0.2 

#hint: MACD with Chandelier stops and P/L label and bubbles.  MACD values are offset so they are all positive, to work more cleanly with the Chandelier stops. 

declare lower; 
declare zerobase; 

input nFast = 12; 
input nSlow = 26; 
input nAvg = 9; 
input macdType = AverageType.EXPONENTIAL; 
input price = close; 
input cloud = Yes; 

def _MACD = MovingAverage(macdType, price , nFast) - MovingAverage(macdType, price, nSlow); 

plot MACD; 
plot Avg; 
plot Mid = if !isNaN(close) then AbsValue(LowestAll(_MACD)) else Double.NaN; 
MACD = _MACD + Mid; 
def _Avg = MovingAverage(macdType, MACD, nAvg); 
Avg = if _Avg < 0 then 0 else _Avg; 

def Diff = MACD - Avg; 
MACD.SetDefaultColor(GetColor(1)); 
Avg.SetDefaultColor(GetColor(8)); 
 
Mid.SetPaintingStrategy(PaintingStrategy.LINE_VS_POINTS); 
Mid.SetLineWeight(1); 
Mid.DefineColor("UU", Color.GREEN); 
Mid.DefineColor("UD", Color.DARK_GREEN); 
Mid.DefineColor("DD", Color.RED); 
Mid.DefineColor("DU", Color.DARK_RED); 

Mid.AssignValueColor(if Diff >= 0 then if Diff > Diff[1] then Mid.color("UU") else Mid.color("UD") else if Diff < Diff[1] then Mid.color("DD") else Mid.color("DU")); 

# Because MACD is offset to be positive, the Diff histogram won't show up normally and so is displayed as a cloud. 

AddCloud(if cloud then Mid + Diff else Double.NaN, Mid); 

############################################### 

## Chandelier stops of MACD 

#hint n: lookback length for highest highs, lowest lows. 
input n = 15; 
#hint atrLength: Period length of avg. true range. 
input atrLength = 5; 
#hint atrMult: Multiplier of avg. true range. 
input atrMult = 3.0;    
#hint atrType: Moving average type of ATR. 
input atrType = AverageType.SIMPLE; 
#hint shift: Offsets the data this many bars. 
input shift = 1;   
#hint label: Toggles P/L label. 
input label = Yes; 

#hint bubbles: Toggles P/L bubbles. 
input bubbles = Yes; 
#hint vLine: Vertical line style of MACD cross with Chandelier stop.  (1..4 to enable, 0 to disable.) 
input vLine = 3; 

def c = MACD; 
def h = Highest(c, ceil(atrMult)); 
def l = Lowest(c, ceil(atrMult)); 
def atr = MovingAverage(atrType, TrueRange(h, c, l), atrLength) * atrMult; 


def smax = Lowest(l, n)[shift] + atr[shift]; 
def smin = Highest(h, n)[shift] - atr[shift]; 

def dir = compoundValue(1, if c > smax[1] then 1 else if c < smin[1] then -1 else dir[1], 0); 

def rUB = compoundValue(1, if dir > 0 then if smax > rUB[1] then smax else rUB[1] else if dir < 0 then if smax < rUB[1] then smax else rUB[1] else rUB[1], h); 

def rLB = compoundValue(1, if dir < 0 then if smin < rLB[1] then smin else rLB[1] else if dir > 0 then if smin > rLB[1] then smin else rLB[1] else rLB[1], l); 

def UB = if dir < 0 then rUB else Double.NaN; 
def LB = if dir > 0 then rLB else Double.NaN; 

def orderDir = dir; 
def isOrder = orderDir crosses 0; 

def orderCount = compoundValue(1, if isNaN(isOrder) then 0 else if isOrder then orderCount[1] + 1 else orderCount[1], 0); 

def noBar = isNaN(open[-1]); 

def orderPrice = if isOrder then if noBar then close else open[-1] else orderPrice[1]; 

def profitLoss = if !isOrder or orderCount == 1 then 0 else if orderDir > 0 then orderPrice[1] - orderPrice else if orderDir < 0 then orderPrice - orderPrice[1] else 0; 

def profitLossSum = compoundValue(1, if isNaN(isOrder) then 0 else if isOrder then profitLossSum[1] + profitLoss else profitLossSum[1], 0); 

AddLabel(label, orderCount + " orders | P/L " + AsDollars((profitLossSum / tickSize()) * tickValue()), if profitLossSum > 0 then Color.GREEN else if profitLossSum < 0 then Color.RED else Color.GRAY); 

AddChartBubble(bubbles and isOrder and orderDir > 0, l, profitLoss, if noBar then Color.LIGHT_GRAY else Color.GREEN, 0); 

AddChartBubble(bubbles and isOrder and orderDir < 0, h, profitLoss, if noBar then Color.GRAY else Color.RED, 1); 

AddVerticalLine(vLine and isOrder, "", if orderDir > 0 then Color.GREEN else Color.RED, vLine); 

## END STUDY 
