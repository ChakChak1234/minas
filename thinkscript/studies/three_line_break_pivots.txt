# Three Line Break Pivots
# Mobius
# V01.05.2018
# Rules
# • If three consecutive bullish lines are formed, then a new
#   bearish line is drawn only if the price falls below the lowest
#   point of the last three bullish lines.
# • If three consecutive bearish lines are formed, then a new
#   bullish line is drawn only if the price rises above the highest
#   point of the last three bearish lines.

input ColorBars = yes;
 
def data = (close + (high + low) / 2) / 2;
def h = high;
def l = low;
def c = close;
def x = barNumber();
def nan = double.nan;
def bullish = sum(data > data[1], 3) == 3;
def bearish = sum(data < data[1], 3) == 3;
def BullBreak = if bullish
                then l
                else BullBreak[1];
def BullBreakBar = if bullish
                   then x
                   else nan;
def BearBreak = if bearish
                then h
                else BearBreak[1];
def BearBreakBar = if bearish
                   then x
                   else nan;
plot BullBreakLine = if x >= HighestAll(BullBreakBar)
                     then highestAll(if isNaN(c[-1])
                                     then BullBreak
                                     else nan)
                     else nan;
     BullBreakLine.SetStyle(Curve.Long_Dash);
     BullBreakLine.SetLineWeight(2);
     BullBreakLine.SetDefaultColor(Color.Red);
plot BearBreakLine = if x >= HighestAll(BearBreakBar)
                     then HighestAll(if isNaN(c[-1])
                                     then BearBreak
                                     else nan)
                     else nan;
     BearBreakLine.SetStyle(Curve.Long_Dash);
     BearBreakLine.SetLineWeight(2);
     BearBreakLine.SetDefaultColor(Color.Green);
def signal;
if data < bullBreak
{
    signal = 1;
}
else if data > bearBreak
{
    signal = -1;
}
else
{
    signal = signal[1];
}
AssignPriceColor(if ColorBars and signal == 1
                 then color.red
                 else if ColorBars and signal == -1
                      then color.green
                      else color.current);
                  