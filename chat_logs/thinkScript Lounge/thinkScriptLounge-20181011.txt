------- Wednesday, October 10, 2018 -------
16:08 MTS1: lol
16:20 UpTheCreek: I think that's what happens if you mix ST chat with a chart
16:28 hguru: FrankB3 thanks for the chart and studies. I have the same RONROD2 study. if anyone wants it the original way he wrote it without # the labels , 2nd line and hostogram here it is MP_IronRod_SMI_histogram_LowerStudy_ver4 http://tos.mx/rI2FJr#
16:28 Nube: I'm going through my breadth stuff and I don't think I ever shared this one
# Nube 
# CCI Applied to Eliades New10TRIN 
# cleaned up original mess 11-6-17
# changed to include both nyse and nasdaq 11-7-17 
# added SP 500 11-9-17

declare lower; 

input length = 20;
input ReturnSignals = no;
input TrendSignals = yes;

input Exchange = { NYSE, SP500, Default NASDAQ } ;

def c = close();
def na = Double.NaN;

def dvolc = if IsNaN(c) then na else 
            if !IsNaN(close("$DVOLC"))
             then close("$DVOLC")
              else dvolc[1];
def uvolc = if IsNaN(c) then na else
            if !IsNaN(close("$UVOLC"))
             then close("$UVOLC")
              else uvolc[1];
def advnc = if IsNaN(c) then na else
            if !IsNaN(close("$ADVNC"))
             then close("$ADVNC")
              else advnc[1];
def decnc = if IsNaN(c) then na else
            if !IsNaN(close("$DECNC"))
             then close("$DECNC")
              else decnc[1];
def dvolcq = if IsNaN(c) then na else 
             if !IsNaN(close("$DVOLC/Q"))
              then close("$DVOLC/Q")
              else dvolcq[1];
def uvolcq = if IsNaN(c) then na else
             if !IsNaN(close("$UVOLC/Q"))
              then close("$UVOLC/Q")
              else uvolcq[1];
def advncq = if IsNaN(c) then na else
             if !IsNaN(close("$ADVNC/Q"))
              then close("$ADVNC/Q")
               else advncq[1];
def decncq = if IsNaN(c) then na else
             if !IsNaN(close("$DECNC/Q"))
              then close("$DECNC/Q")
               else decncq[1];
def dvolsp = if IsNaN(c) then na else 
            if !IsNaN(close("$DVOLSP"))
             then close("$DVOLSP")
              else dvolsp[1];
def uvolsp = if IsNaN(c) then na else
            if !IsNaN(close("$UVOLSP"))
             then close("$UVOLSP")
              else uvolsp[1];
def advsp = if IsNaN(c) then na else
            if !IsNaN(close("$ADVSP"))
             then close("$ADVSP")
              else advsp[1];
def declsp = if IsNaN(c) then na else
            if !IsNaN(close("$DECLSP"))
             then close("$DECLSP")
              else declsp[1];
               
def dvol;
def uvol;
def advn;
def decn;
switch (Exchange) {
case NYSE:
    dvol = dvolc;
    uvol = uvolc;
    advn = advnc;
    decn = decnc;
case NASDAQ:
    dvol = dvolcq;
    uvol = uvolcq;
    advn = advncq;
    decn = decncq;
case SP500:
    dvol = dvolsp;
    uvol = uvolsp;
    advn = advsp;
    decn = declsp;
}

def New10TRIN =-(sum(dvol,10)/sum(uvol,10))/(sum((advn/decn)/(uvol/dvol),10)/10);

def price  = New10TRIN;
def linDev = LinDev(price, length);
def NewTrinCCI = if   linDev == 0 then 0 
                 else (price - Inertia(price, length)) / linDev / 0.015;

def NewTrinCciState = if   NewTrinCCI crosses above -100 
                      then 1 
                      else if   NewTrinCCI crosses below 100 
                           then 0 
                           else NewTrinCciState[1];
def iNewCCI = Inertia(NewTrinCCI, Length);
def DnTrend = NewTrinCciState == 1 
              and NewTrinCCI  crosses below iNewCCI 
              and NewTrinCCI < 0;
def UpTrend = NewTrinCciState == 0 
              and NewTrinCCI crosses above iNewCCI 
              and NewTrinCCI > 0;

 
plot TrinCCI   = NewTrinCCI;
plot OverBought = 100;
plot OverSold = -100;
plot ZeroLine = 0;
plot TwoHundred = 200;
plot NegTwoHundred = -200;
plot UpSignal = if   NewTrinCCI crosses above ZeroLine
                then ZeroLine 
                else na;
plot DownSignal = if   NewTrinCCI crosses below ZeroLine
                  then ZeroLine 
                  else na;
plot 
TrendUp = if UpTrend then 100 else na;
TrendUp.  SetDefaultColor(GetColor(5));
TrendUp.  SetPaintingStrategy(PaintingStrategy.POINTS);
TrendUp.  SetLineWeight(3);
TrendUp.  SetHiding(!TrendSignals);
plot 
TrendDn = if DnTrend then -100 else na;
TrendDn.  SetDefaultColor(GetColor(1));
TrendDn.  SetPaintingStrategy(PaintingStrategy.POINTS);
TrendDn.  SetLineWeight(3);
TrendDn.  SetHiding(!TrendSignals);
UpSignal.SetDefaultColor(GetColor(1));
UpSignal.SetPaintingStrategy(PaintingStrategy.POINTS);
DownSignal.SetDefaultColor(GetColor(5));
DownSignal.SetPaintingStrategy(PaintingStrategy.POINTS);
TrinCCI.SetDefaultColor(GetColor(3));
ZeroLine.SetDefaultColor(Color.GRAY);
ZeroLine.SetStyle(Curve.LONG_DASH);
OverBought.SetDefaultColor(Color.DARK_GRAY);
OverSold.SetDefaultColor(Color.DARK_GRAY);
TwoHundred.SetDefaultColor(Color.GRAY);
TwoHundred.SetStyle(Curve.SHORT_DASH);
NegTwoHundred.SetDefaultColor(Color.GRAY);
NegTwoHundred.SetStyle(Curve.SHORT_DASH);
UpSignal.SetHiding(!ReturnSignals);
DownSignal.SetHiding(!ReturnSignals);

16:29 woodie: gotta love the cci
16:30 Nube: How in the blue blazes is he so fast. Is woodie a bot?
16:30 Nube: testing CCI testing
16:30 woodie: hehe
16:30 Nube: That's a no
16:32 Nube: That study ended being much more usable that I had expected. I went into is assuming it would be pure noise and ended pleasantly surprised.
16:36 FrankB3:    hguru::  yw and thanks
17:07 amalia: Iâ€™ve only seen woodie take longer than 2mins to reply once.
17:08 AlphaInvestor: most of the time Woodie answers before the question is asked. CCI is predictive after all.
18:08 Nube: 
# Bubbles in Expansion Two Ways
# TsL Request for I think it was slash
# Nube

input barsFromNow = 8;
input desiredTime = 2100;
input daysFromNow = 0;

def na = Double.NaN;
def bn = BarNumber();
def day = GetYYYYMMDD();
def currentBar = HighestAll(if !IsNaN(close) then bn else na);
def currentDay = HighestAll(if   bn == currentBar then day else na); 
def hi = HighestAll(if bn == currentBar then high else na);
def lo = HighestAll(if bn == currentBar then low else na);

AddChartBubble(bn == CurrentBar + barsFromNow, lo, "Test Bubble\n"+barsFromNow+" Bars Forward", Color.Light_Gray, 0);

AddChartBubble(SecondsFromTime(desiredTime) == 0 && day == currentDay + daysFromNow, hi, "Test Bubble\nDays From Today "+daysFromNow+"\nAt Time "+desiredTime, Color.Gray);

# f/ Bubbles in Expansion Two Ways
18:10 Nube:  
18:16 MTS1: We need more cow bell  - uh - bubbles!
18:22 John1a: Do you guys have BSP indicator for futures?
18:22 DMonkey: whats a BSP indicator?
18:24 John1a: Buy/Sell Pressure, it is constracted using something like this, but I am no coder: $UVOLSP - $DVOLSP / $UVOLSP + $DVOLSP or UVOL/DVOL  UVOLSP/DVOLSP as a lower study.
18:24 DMonkey: nube...would you have to reset the input each day?
18:32 Nube: Yesindeedy. I figured it was enough to suffice as a proof of concept without having to calculate how many bazillions of milliseconds some specific day would be. Someone with more ambition than I have can do that.  
18:34 DMonkey: http://tos.mx/VmmEPS#
18:37 Nube: 
#John1a: Buy/Sell Pressure, it is constracted using something like this, but I am no coder: $UVOLSP - $DVOLSP / $UVOLSP + $DVOLSP

declare lower;
def uvol = close("$UVOLSP");
def dvol = close("$DVOLSP");
plot Data = (uvol - dvol) / (uvol + dvol);
18:39 Nube: Well that was certainly easier than I was making it out to be
18:40 Nube: DaysFromDay() is one I hadn't used before, that sure makes it easier
18:40 Nube: Err, DaysFromDate()
18:41 John1a: Nube: Thank you! I've seen it on a different platform with a zero line an a green/red vertical bars. Is there a way to plot it like that? I would really appriciate it, just moved to TOS and trying to re-create my setup, but still a lot to learn about TOS.
18:42 Nube: Add this
plot Zero = 0;
18:43 Nube: Vertical bars mark where it crosses from positive to negative and vice versa?
18:44 John1a: Vertical bars instead of a line, above zero green bars below zero red bars
18:45 John1a: It also had like a label that would show the current reading
18:46 Nube: Ah, so a histogram
18:47 John1a: Is that what it is called? Yes, a histogram, sorry, still learning how things are called in TOS
18:50 Nube: #John1a: Buy/Sell Pressure, it is constracted using something like this, but I am no coder: $UVOLSP - $DVOLSP / $UVOLSP + $DVOLSP

declare lower;

input averageLength = 1;

def uvol = close("$UVOLSP");
def dvol = close("$DVOLSP");
def data = (uvol - dvol) / (uvol + dvol);

plot 
Zero = 0;
Zero.  SetDefaultColor(Color.Gray);

plot
BuySellPressure = Average(data, averageLength);
BuySellPressure.  SetPaintingStrategy(PaintingStrategy.HISTOGRAM);
BuySellPressure.  AssignValueColor(if   BuySellPressure < Zero
                                   then Color.Red
                                   else Color.Green);

18:55 John1a: Nube: Yes, it is perfect. Thank you SO much, I really appreciate it!
18:56 slashgw: MTS, I tried the code you put up earlier.  it does display the vertical line, but same parameters for some reason don't work with the bubble.  Also, yours was based only on time.  I need to be able to do this based on Day of month, and time.
Here is what I tried with the bubble.  and the result.
https://screencast.com/t/Jx7zoykI
18:57 slashgw: input DisplayTimeVLines = yes;
input Time1 = 1950;
input Text1 = "Ch2h-JpLH";
input DebugMode = yes;

def T1 = SecondsTillTime(Time1) ;

AddChartBubble(DisplayTimeVLines and T1 <= 0 and T1[1] > 0, high, Text1, Color.RED);
AddVerticalLine(DisplayTimeVLines and T1 <= 0 and T1[1] > 0, Text1, Color.RED, Curve.SHORT_DASH);
AddLabel(DebugMode, T1, color.cyan);


18:58 DMonkey: slash....I gave you the answer
18:58 mr2p_4k: Why the market depth only show the current bid and ask and not the depth any more?
18:58 Nube: John, I forgot the label, add this to the bottom of that study
def bsp = if !IsNaN(BuySellPressure) then BuySellPressure else bsp[1];
AddLabel(1, " Buy Sell Pressure: "+bsp, if bsp < 0 then Color.Red else Color.Green);
18:59 John1a: Nube: Thank you! One  more question if I may: Do you guys have a 3 minute countdown timer?
19:00 Nube: No. Unfortunately ThinkScript can't access the clock
19:00 UpTheCreek: slash there are GetMonth and GetDayofMonth functions in the manual if you care to look them up
19:01 slashgw: DMonkey, what you put up today, wasn't what I was looking for.  someone else was looking for the 1min high at start of each hour.  but it wasn't me.
19:01 slashgw: oh believe me, I have looked them up.  many times.
19:01 John1a: Nube: Got it. Really appreciate your help!
19:02 UpTheCreek: john1a, do you know where the tutorials and manual are?
19:02 DMonkey: slash.....
http://tos.mx/BjZKPU#
19:05 John1a: Up: Tutorials and manuals for TOS? Sorry, no I don't.
19:09 slashgw: DMonkey, thank you very much!  That get's me closer.  Is there a limit to how far to the right this can be displayed?  I changed the date to 3 days from now and it doesn't display, even though I can see all of next week in the expansion area.
19:09 UpTheCreek: might help for your future enddevors
http://tlc.thinkorswim.com/center/howToTos/tutorials.html
19:10 UpTheCreek: http://tlc.thinkorswim.com/center/reference/thinkScript.html
19:10 John1a: Up: I saw a mesage here saying to request a tour and ask support for studies that they have written or that have been written by some support guru (sorry, don't remember his name). I asked them, they said that they don't share any studies and I should ask for help here.
19:10 John1a: Up: Thank you, bookmarked, I'll start reading.
19:11 UpTheCreek: support used to share studies that ToS did for educational purposes  - haven't heard that they stopped doinng that
19:11 John1a: Up: That is what they told me. Do you have this share by any chance?
19:12 Wally: John1a, someone shared a timer the other day,  input StartTime = 930;
input Interval_In_Minutes = 3;
input displace = 0.2;

def AftrStartTime = SecondsFromTime(StartTime - 1) > 59;
def StartPoint = !AftrStartTime[1] and AftrStartTime;

def MinutesGoneBy = if AftrStartTime then SecondsFromTime(StartTime) / 60 else 0;

def IntervalPast = if AftrStartTime then
RoundDown(MinutesGoneBy / Interval_In_Minutes, 0) else 0;

def IntervalPoint = IntervalPast > IntervalPast[1];

rec MinutesPastInterval = if IntervalPoint or StartPoint then 0 else
MinutesPastInterval[1] + 1;

def OneMinuteLeft = MinutesPastInterval == (Interval_In_Minutes - 1);

plot IntervalGoneBy = if IntervalPoint then high + displace else Double.NaN;
IntervalGoneBy.SetStyle(Curve.POINTS);
IntervalGoneBy.SetLineWeight(5);

AddChartBubble(OneMinuteLeft, high, "1");
AddLabel(OneMinuteLeft, "1 Minute Left");

Alert(OneMinuteLeft, Concat(GetSymbolPart(), " trend line violation"),
Alert.BAR, Sound.Ring); 
19:13 UpTheCreek: if you look up my yTrade page, I have them in my Lounge Collection.  Some of those other items you may find interesting as well
19:14 John1a: Up: My Trade? What is that?
19:14 John1a: Wally: Thank you very much!
19:14 Wally: yw
19:14 UpTheCreek: right click on my name and then User Profile
19:15 slashgw: John, or https://screencast.com/t/Fcakdy1zO
19:15 slashgw: can search there for others as well
19:15 UpTheCreek: MtTrade is a site that ToS has for all its ue
19:15 UpTheCreek: users to share things
19:16 UpTheCreek: ....its really hard to  type with a cat sleeping on your hands  :(
19:16 John1a: Up: Oh, wow, this is great, you have a lot of stuff to go over. I really appreciate the info and your help.
19:16 UpTheCreek: yw
19:18 DMonkey: what time frame chart slash?
19:20 slashgw: had to reboot.  i was trying 10, 15 & 30
19:22 slashgw: reboot may have cured it.  it may have been running so slow that I wasn't giving it enough time.
19:23 slashgw: yeah, seems much better now.  with 100+ bars in the expansion area and haven't restarted the app in a couple days, it was starting to lag
19:24 JohnnyQuotron: mobius... you high and dry?
19:26 slashgw: DMonkey, so far, so  good!  Seriously appreciate your help with this.  It was driving me crazy!  Now I can move on to the next step now that I know it's doable. Thanks a ton!
19:27 UpTheCreek: cant wait to see this creation
19:27 slashgw: it's going to be INSANE!
19:28 UpTheCreek: oh goodie, been a whle since we've seen insane
19:29 UpTheCreek: also probalby the first time I've seen Daysfrom/till... used
19:29 slashgw: lol.  once I get everything lined out, I will have Python building the actual script
19:30 slashgw: and should abe accessible via a webpage
19:30 DMonkey: whos python
19:30 slashgw: Monty
19:30 UpTheCreek: lol
19:31 DMonkey: yw
19:35 slashgw: I like the idea of using both the bubble and the vertical line.  that may workout well.  use the line to put emphasis on the exact time, and stack the bubbles higher up, on top of each other.
19:35 slashgw: you da man!
19:40 Nube: Alpha hotrodded a dud of a gap study I did a couple weeks back. He said he hadn't any more plans for it so to my knowledge this is the final version of that previous Gap Ribbon

# Gap Ribbon
# Nube 9.29.18
# upgrade by AI 10.1.18
# Now includes a percent threshold
# Also 10.1.18, that threshold can now also be ticks

declare lower;

    # inputs
input length    = 100;
input avgLength = 1;
input tickOrPercent = {Percent, default Tick};
input gapPercentOrTicks = 1.0;
    # variables
def h = high;
def l = low;
def dnGap;
def upGap;
switch (tickOrPercent) {
    Case Percent:
dnGap = h < l[1] * (1 - gapPercentOrTicks/100);
upGap = l > h[1] * (1 + gapPercentOrTicks/100);
    Case Tick:
dnGap = h < l[1] + TickSize();
upGap = l > h[1] + TickSize();
}

def dn = sum(dnGap,length);
def up = sum(upGap,length);
    # plots          
plot 
GapDown = Average(dn, avgLength);
GapDown.  SetDefaultColor(Color.DownTick);
plot 
GapUp = Average(up, avgLength);
GapUp.  SetDefaultColor(Color.UpTick);

AddCloud(GapUp, GapDown, Color.Green);

Addlabel(1," "+up+ " gap Ups of at least "+
(if   tickOrPercent == tickOrPercent."Percent" 
 then aspercent(gapPercentOrTicks/100) 
 else +gapPercentOrTicks+ 
(if   gappercentOrTicks > 1 
 then " ticks" 
 else " tick"))+
 " in the past "+length+" bars ", Color.Light_Green);

Addlabel(1," "+dn+ " gap Downs of at least "+
(if   tickOrPercent == tickOrPercent."Percent" 
 then aspercent(gapPercentOrTicks/100) 
 else +gapPercentOrTicks+ 
(if   gappercentOrTicks > 1 
 then " ticks" 
 else " tick"))+
 " in the past "+length+" bars ", Color.Pink);

# f/ Gap Ribbon
19:45 Nube: Not even sure why I was messing with that switch, but I ruined it. Here's the unruined one.
# Gap Ribbon
# Nube 9.29.18
# upgrade by AI 10.1.18
# Now includes a percent threshold
# Also 10.1.18, that threshold can now also be ticks

declare lower;

    # inputs
input length    = 100;
input avgLength = 1;
input tickOrPercent = {Percent, default Tick};
input gapPercentOrTicks = 1.0;
    # variables
def h = high;
def l = low;
def dnGap;
def upGap;
switch (tickOrPercent) {
    Case Percent:
dnGap = h < l[1] * (1 - gapPercentOrTicks/100);
upGap = l > h[1] * (1 + gapPercentOrTicks/100);
    Case Tick:
dnGap = h < l[1] - TickSize() * gapPercentOrTicks;
upGap = l > h[1] + TickSize() * gapPercentOrTicks;
}

def dn = sum(dnGap,length);
def up = sum(upGap,length);
    # plots          
plot 
GapDown = Average(dn, avgLength);
GapDown.  SetDefaultColor(Color.DownTick);
plot 
GapUp = Average(up, avgLength);
GapUp.  SetDefaultColor(Color.UpTick);

AddCloud(GapUp, GapDown, Color.Green);

Addlabel(1," "+up+ " gap Ups of at least "+
(if   tickOrPercent == tickOrPercent."Percent" 
 then aspercent(gapPercentOrTicks/100) 
 else +gapPercentOrTicks+ 
(if   gappercentOrTicks > 1 
 then " ticks" 
 else " tick"))+
 " in the past "+length+" bars ", Color.Light_Green);

Addlabel(1," "+dn+ " gap Downs of at least "+
(if   tickOrPercent == tickOrPercent."Percent" 
 then aspercent(gapPercentOrTicks/100) 
 else +gapPercentOrTicks+ 
(if   gappercentOrTicks > 1 
 then " ticks" 
 else " tick"))+
 " in the past "+length+" bars ", Color.Pink);

# f/ Gap Ribbon
19:46 admin_tculs: thinkScript Lounge chatroom will be closing soon   Please finish all conversations by 8pm ct   Have a nice evening
19:46 slashgw: have a goodnight all!  and thanks again for the help & guidance!
19:50 DMonkey:  declare lower;
def a = log(close("$UVOLSP"));
def b = log(close("$DVOLSP"));
plot data = a - b;
data.setpaintingStrategy(paintingStrategy.HISTOGRAM);
data.assignValueColor(if between(data,0,.5)
                      then color.green 
                      else if between(data,-.5,0) 
                      then color.red 
                      else color.orange);
19:50 amalia: Have a good night admin_tculs, DMonkey and room.
19:51 John1a: Have a good one all. DMonkey, thank you very much!
19:51 DMonkey: gn all.....
19:58 admin_tculs: gn amalia
------- Thursday, October 11, 2018 -------
05:56 stevie_s: .
07:02 Nube: Go figure. Stopped right at the .25 Fibonacci retracement from the rally.
07:03 Nube: Be right back. Becoming a financial media guru
07:20 Nube: QuarterFibs will be the next big batch of requests coming through
08:24 inov: Good morning...is there a way to find the highest closing price for the current day at any given time (e.g at 11:00 a.m, I would like to know the highest closing price from 9:30 - 11 or at 2:30p.m I need the highest closing price from 9-2:30 p.m)....thanks for ur help
08:31 Nube: Untested but this is where I would start plot dayHi = HighestAll(if GetDay() == GetLastDay() then close else Double.NaN);
08:35 Wally: Charts are lagging
08:42 OneComma: Any way to fix chart lag?
08:42 inov: thanks Nube, I will try
08:53 Vimes: charts not updating, grrr
08:58 tajtx: Long MU at $42.25
09:16 UpTheCreek: wrong room taj
09:36 thinkn00b: I'm trying to make a scanner that shows stocks that have their day of high 20% from open, this is my script: high*1.2>open, but it doesn't seems to work...
09:38 Vimes: plot scan = high>=1.2*open;
09:38 MTS1: you're on daily aggregation in scan? What stocks would you have expected to be there that are not?
09:39 MTS1: Actually Vimes is right; you're scannign for open to be less than 120% of high which would be all stocks;)
09:45 thinkn00b: I want stocks that are up 20% from open
09:45 thinkn00b: that have their heigh of day 20% from open I mean
09:45 inov: any other thoughts on how to get the DayHigh???
09:50 Vimes: plot dH = high(period= aggregationPeriod.DAY);
09:50 Vimes: will give yu the continous daily high
09:50 Paris: inov - you might like to consider something like an intraday high. Here's an example

def today = HighestAll(if !isNaN(close) 
                       then GetYYYYMMDD() 
                       else Double.NaN);

plot h = HighestAll(if GetYYYYMMDD() == today 
                    then high 
                    else Double.NaN);
09:51 Vimes: unles you are trying to use it in a scan, then follow paris
09:55 mthfr_vaxxed: automatic chat log history coming soon to a github near you
09:58 and76: Paris I found this BLT script is there any updated one  thanks      #Example Fractal Pivots Anchored VWAP
#20170817 BLT using Fractal Pivot study shared in TSL, Linus Anchored VWAP
#Fractal Pivots are plotted to hopefully create a zigzag pattern (pointcount tries to do this)
#Forming Pivots are plotted when the left side criteria is met and 1 future candle. A bar count is then captured in a label and/chartbubble. Yellow is unconfirmed and Green/Red is confirmed. The next forming fractal will also plot a bubble (P-?) and anchored VWAP lines (these will change if the fractal goes unconfirmed)
#This studies anchored VWAP dynamically plots the VWAP vs the current version of Linus' original study that does not (only updates when the chart is refreshed, either through changing symbols or aggregations, for example)

def h = high;
def l = low;
def c = close;
def o = open;
def v = volume;

# Simple Fractal Recon
input length = 13; # Originally 30

def HH1 = h >= Highest(h, length) and h >= Highest(h, length)[-length];
def High1 = if HH1 then h else Double.NaN;
def LL1 = l <= Lowest(l, length) and l <= Lowest(l, length)[-length];
def Low1 = if LL1 then l else Double.NaN;
def PointCount = if BarNumber() == 1 then 0 else
                 if IsNaN(c) then PointCount[1] else
                 if !IsNaN(High1) then Max(1, PointCount[1] + 1) else
                 if !IsNaN(Low1) then Min(-1, PointCount[1] - 1) 
                 else PointCount[1];

input showhorizontals = yes;
def RangeHI = if !IsNaN(High1) and PointCount == 1 
then h else RangeHI[1];
plot Rhi = if !showhorizontals then Double.NaN else RangeHI;
Rhi.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
Rhi.SetLineWeight(1);
Rhi.SetDefaultColor(Color.RED);
def RangeLO = if !IsNaN(Low1) and PointCount == -1 
then l else RangeLO[1];
plot Rlo = if !showhorizontals then Double.NaN else RangeLO;
Rlo.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
Rlo.SetLineWeight(1);
Rlo.SetDefaultColor(Color.GREEN);

#ZigZags

input showzigzag= no;
def zHI;
def zLO;
zHI = if !IsNaN(High1) and PointCount == 1 then h else Double.NaN;
zLO = if !IsNaN(Low1) and PointCount == -1 then l else Double.NaN;
#plot hilowline = if !IsNaN(zHI) then zHI else zLO;
#hilowline.EnableApproximation();
plot hilowline = if !showzigzag then Double.NaN else if !IsNaN(zHI) then zHI else zLO;
hilowline.EnableApproximation();


#Potental Pivots Identified using left side full length and a length of one to the right
input showlabels  = yes;
input showbubbles = yes;
input bubblemover_updown = 4;

def  x1  = if h >= Highest(h, length) and h >= Highest(h, 1)[-1] then 1 else x1[1] + 1;
def xx   = if x1 == 1 then xx[1] + 1 else xx[1];
AddLabel(showlabels, length + " Bars needed to confirm Last or Potental Pivot .. ", Color.WHITE);
AddLabel(showlabels, "High Pivot: " + GetValue(x1, 1), if GetValue(x1, 1) > length then Color.RED else Color.YELLOW);
AddChartBubble(showbubbles and xx == HighestAll(xx)
                           and xx != xx[1] 
                           and IsNaN(zHI),
                           h + bubblemover_updown * TickSize(), 
                           "P-?", Color.RED);

def  y  = if l <= Lowest(l, length) and l <= Lowest(l, 1)[-1] then 1 else y[1] + 1;
AddLabel(showlabels, " Low Pivot: " + GetValue(y, 1), if GetValue(y, 1) > length then Color.GREEN else Color.YELLOW);
def yy  = if y == 1 then yy[1] + 1 else yy[1];
AddChartBubble(showbubbles and yy == HighestAll(yy)
                           and yy != yy[1]
                           and IsNaN(zLO), 
                           l -  bubblemover_updown * TickSize(), 

                          "P-?", Color.GREEN, no);

input bubblemover_sideways = 6;
def  w  = bubblemover_sideways;
def w1  = w + 1;
AddChartBubble(!IsNaN(c[w1]) and IsNaN(c[w]), c[w1], "H:" + GetValue(x1[w1], 1), if GetValue(x1[w1], 1) > length then Color.RED else Color.YELLOW, no);
AddChartBubble(!IsNaN(c[w1]) and IsNaN(c[w]), c[w1], "L:" + GetValue(y[w1], 1) , if GetValue(y[w1], 1) > length then Color.GREEN else Color.YELLOW, no);

#Arrows
input showarrows = no;
plot Up = showarrows and (!IsNaN(zLO) or ( yy == HighestAll(yy)
                           and yy != yy[1]
                           and IsNaN(zLO) 
                           and GetMaxValueOffset(!IsNaN(zHI), length = 500) < GetMaxValueOffset(!IsNaN(zLO), length = 500)));
Up.SetPaintingStrategy(PaintingStrategy.BOOLEAN_ARROW_UP);
Up.SetLineWeight(3);
Up.SetDefaultColor(Color.GREEN);
Up.SetHiding(showarrows == no);

plot Dn = showarrows and (!IsNaN(zHI) or ( xx == HighestAll(xx)
                           and xx != xx[1] 
                           and IsNaN(zHI)
                           and GetMaxValueOffset(!IsNaN(zHI), length = 500) > GetMaxValueOffset(!IsNaN(zLO), length = 500)));
Dn.SetPaintingStrategy(PaintingStrategy.BOOLEAN_ARROW_DOWN);
Dn.SetLineWeight(3);
Dn.SetDefaultColor(Color.RED);
Dn.SetHiding(showarrows == no);

Input showcandles = yes;

def UpCandle = showcandles and (!IsNaN(zLO) or ( yy == HighestAll(yy)
                           and yy != yy[1]
                           and IsNaN(zLO) 
                           and GetMaxValueOffset(!IsNaN(zHI),
length = 500) < GetMaxValueOffset(!IsNaN(zLO), length = 500)));
def DnCandle = showcandles and (!IsNaN(zHI) or ( xx == HighestAll(xx)
                           and xx != xx[1] 
                           and IsNaN(zHI)
                           and GetMaxValueOffset(!IsNaN(zHI), length = 500) > GetMaxValueOffset(!IsNaN(zLO), length = 500)));


# Candle retracement off ZigZag Pivots
# Added 08/18/17

def last = if isnan(close[-1]) and !isnan(close) then barnumber() else last[1];

input show50 = yes;
plot HalfBack = if show50 and (upCandle or dnCandle) then hl2 else double.nan;
HalfBack.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
HalfBack.SetDefaultColor(color.Yellow);
HalfBack.SetLineWeight(3);
def hbext    = if isnan(halfback) then hbext[1] else halfback;
plot hbextline = hbext;
hbextline.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
hbextline.SetDefaultColor(color.Yellow);
hbextline.SetLineWeight(3);

input show75 = yes;
plot Back75 = if show75 and (upCandle or dnCandle) then low+(high-low)*.75 else double.nan;
Back75.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
Back75.SetDefaultColor(color.white);
Back75.SetLineWeight(1);

input show25 = yes;
plot Back25 = if show25 and (upCandle or dnCandle) then low+(high-low)*.25 else double.nan;
Back25.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
Back25.SetDefaultColor(color.white);
Back25.SetLineWeight(1);

input bubblemover = 1;
def n1 = bubblemover + 1;
input showbubble_candle    = no;
input showbubble_expansion = no;
addchartBubble(showbubble_candle and barnumber()==highestall(last-1),high,"H: " +high,color.white,yes);
addchartBubble(showbubble_candle and barnumber()==highestall(last-1),low,"L: " +low,color.white,no);
addchartBubble(showbubble_expansion and isnan(close[bubblemover]) and !isnan(close[n1]),high[n1+1],"H: " +high[n1+1],color.white,yes);
addchartBubble(showbubble_expansion and isnan(close[bubblemover]) and !isnan(close[n1]),low[n1+1],"L: " +low[n1+1],color.white,no);
def h1 = if isnan(close) then h1[1] else high[1];
plot h1p = if barnumber()>=highestall(last) then h1 else double.nan;
h1p.setpaintingStrategy(PaintingStrategy.HORIZONTAL);
h1p.setdefaultColor(color.white);
input showcolor_light_gray = yes;
h1p.assignvalueColor(if showcolor_light_gray then color.light_gray else color.white);
def l1 = if isnan(close) then l1[1] else low[1];
plot l1p = if barnumber()>=highestall(last) then l1 else double.nan;
l1p.setpaintingStrategy(PaintingStrategy.HORIZONTAL);
l1p.setdefaultColor(color.white);
l1p.assignvalueColor(if showcolor_light_gray then color.light_gray else color.white);

# plot HalfBack = if show50 and (up or dn) then hl2 else double.nan;

# Plots
#plot SD_Pivot = LinePlot(data = PP, LineLimit = Mean_Limit, OnExpansion = OnExpansion, bar = StartBar).P;
#plot SD_Pivot_X = LinePlot(data = PP, LineLimit = StartBar).ExpLine;
#     SD_Pivot.SetDefaultColor(Color.CYAN);
##     SD_Pivot_X.SetDefaultColor(Color.CYAN);
#plot SD_R1 = LinePlot(data = SHigh, LineLimit = SHigh_Limit, OnExpansion = OnExpansion, bar = SHighBar).P;
#plot SD_R1_X = LinePlot(data = SHigh, LineLimit = SHigh_Limit).ExpLine;
#     SD_R1.SetDefaultColor(Color.Light_GREEN);
#     SD_R1_X.SetDefaultColor(Color.Light_GREEN);
#plot SD_S1 = LinePlot(data = SLow, LineLimit = SLow_Limit, OnExpansion = OnExpansion, bar = SLowBar).P;
#plot SD_S1_X = LinePlot(data = SLow, LineLimit = SLow_Limit).ExpLine;
#     SD_S1.SetDefaultColor(Color.Light_RED);
#     SD_S1_X.SetDefaultColor(Color.Light_RED);
#plot SPlot = if S 
#             then S1 #l - (2 * TickSize())
#             else Double.NaN;
#     SPlot.SetHiding(!DisplayPoints);
#     SPlot.SetPaintingStrategy(PaintingStrategy.POINTS);
#     SPlot.SetLineWeight(1);
#     SPlot.SetDefaultColor(Color.Yellow);
addCloud(Halfback, zHi, CreateColor(50,150,75), CreateColor(50,150,70));
addCloud(zLO, Halfback,  CreateColor(175,0,50), CreateColor(175,0,50));

input debug = yes;
plot x =   close > halfback and close <zHI;
x.setpaintingStrategy(paintingStrategy.VALUES_ABOVE);

#addCloud(SD_S1, SD_pivot, CreateColor(175,0,50), CreateColor(175,0,50));
#addCloud(SD_pivot_X, SD_R1_X, CreateColor(50,150,75), #CreateColor(50,150,70));
#addCloud(SD_S1_X, SD_pivot_X, CreateColor(175,0,50), CreateColor(175,0,50));
10:00 inov: thanks Vimes and Paris, will try ur suggestions
10:00 Paris: and76, let me look into my stash and see what I can find
10:06 and76: thanks a billion Paris
10:09 Paris: and76 - Found it. The name of the study I saved in my archives is called Fractal Pivot Anchord VWAP.  There are a total of 6 different versions of that study. Version 1 is dated 8.17.2017 and version 6 is dated 1.5.2018.  I don't use that study and hence cannot tell you what the specific differences of those studies are without doing some massive code examination. Assuming you're looking for the last version, I'll be happy to post.
10:12 Paris: and76 - Here is the very last version of the Fractal Pivot Anchored VWAP that was posted by BLT in January 2018, complete with annotations.

# Fractal Pivot Anchored VWAP
# BLT
# 1.5.2018

# Here is a Fractal Pivot study with Linus Anchored VWAP that dynamically 
# updates the VWAP (Linus' original study does not currently as far as I know)
#
# Fractal Pivots are plotted to hopefully create a zigzag pattern (pointcount 
# tries to do this). Forming Pivots are plotted when the left side criteria is 
# met and 1 future candle. A bar count is then captured in a label and/or
# chartbubble. Yellow is unconfirmed and Green/Red is confirmed. The next 
# forming fractal will also plot a bubble (P-?) and anchored VWAP lines (these 
# will change if the fractal goes unconfirmed)
#
# This studies anchored VWAP dynamically plots the VWAP vs the current version 
# of Linus' original study that does not (only updates when the chart is 
# refreshed, either through changing symbols or aggregations, for example)

# 20170817 - BLT using Fractal Pivot study shared in TSL, Linus Anchored VWAP
#
# 20171102 - BLT Added Hardog suggested HHLL bubbles and labels.
#                Added count of up to 5 consecutive HHLL to help show the
#                strength of their current direction
#
# 20171231 - BLT V2, corrected the bars forward requirement from 1 bar to the 
#                potentialbarsforward value input for potential pivots (eg: if 
#                fractal length set at 30 and potential bars forward to 4, 
#                then a potential pivot will be denoted as P? when 30 bars to 
#                the left of the pivot are met and 4 to the right, disappearing 
#                if the bars to the right do not make the full 30 required)
#                Added an input use_highlow_zigzag_pattern to allow user to 
#                require a high/low zigzag if set to use or allow pivots to be 
#                made as they are made (eg: low then high then another high 
#                before a low is met)

def h = high;
def l = low;
def c = close;
def o = open;
def v = volume;

# Simple Fractal Recon
input length = 13;

def HH1 = h >= Highest(h, length) and h >= Highest(h, length)[-length];
def High1 = if HH1 then h else Double.NaN;
def LL1 = l <= Lowest(l, length) and l <= Lowest(l, length)[-length];
def Low1 = if LL1 then l else Double.NaN;

input use_highlow_zigzag_pattern = no;
def PointCount = if BarNumber() == 1 then 0 else
                 if IsNaN(c) then PointCount[1] else
                 if !IsNaN(High1) then Max(1, PointCount[1] + 1) else
                 if !IsNaN(Low1) then Min(-1, PointCount[1] - 1) 
                 else PointCount[1];

input showhorizontals = yes;
def RangeHI = if use_highlow_zigzag_pattern==yes 
              and PointCount == 1 and !IsNaN(High1)
              then h
              else if use_highlow_zigzag_pattern==no and !IsNaN(High1)
              then h else RangeHI[1];
plot Rhi = if !showhorizontals then Double.NaN else RangeHI;
Rhi.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
Rhi.SetLineWeight(1);
Rhi.SetDefaultColor(Color.RED);
def RangeLO = if use_highlow_zigzag_pattern==yes and PointCount == -1 and !IsNaN(Low1)
              then l
              else if use_highlow_zigzag_pattern==no and !IsNaN(Low1)
              then l
              else RangeLO[1];
plot Rlo = if !showhorizontals then Double.NaN else RangeLO;
Rlo.SetPaintingStrategy(PaintingStrategy.HORIZONTAL);
Rlo.SetLineWeight(1);
Rlo.SetDefaultColor(Color.GREEN);

#Harndog
input HHLLlabels = yes;

def rh1 = if rangehi then rangehi else rh1[1];
def rh2 = if rh1 != rh1[1] then rh1[1] else rh2[1];
def rh3 = if rh2 != rh2[1] then rh2[1] else rh3[1];
def rh4 = if rh3 != rh3[1] then rh3[1] else rh4[1];
def rh5 = if rh4 != rh4[1] then rh4[1] else rh5[1];
def rh6 = if rh5 != rh5[1] then rh5[1] else rh6[1];
def rh1c = if rh1>rh2 then 1 else 0;
def rh2c = if rh2>rh3 then 1 else 0;
def rh3c = if rh3>rh4 then 1 else 0;
def rh4c = if rh4>rh5 then 1 else 0;
def rh5c = if rh5>rh6 then 1 else 0;

def rhc  = if (rh1c+rh2c+rh3c+rh4c+rh5c)==5 then 5 else if (rh1c+rh2c+rh3c+rh4c)==4 then 4 else if (rh1c+rh2c+rh3c)==4 then 3 else if (rh1c+rh2c)==2 then 2 else if (rh1c)==1 then 1  else 0;
def rhc1  = if (rh1c+rh2c+rh3c+rh4c+rh5c)==0 then 5 else if (rh1c+rh2c+rh3c+rh4c)==0 then 4 else if (rh1c+rh2c+rh3c)==0 then 3 else if (rh1c+rh2c)==0 then 2 else if (rh1c)==0 then 1  else 0;

AddLabel(HHLLlabels, if rh1 > rh2
              then rhc + " Higher Highs "
              else rhc1 + " Lower Highs ", 
              if rh1 > rh2
              then Color.GREEN 
              else Color.RED);

def rl1 = if rangelo then rangelo else rl1[1];
rec rl2 = if rl1 != rl1[1] then rl1[1] else rl2[1];
def rl3 = if rl2 != rl2[1] then rl2[1] else rl3[1];
def rl4 = if rl3 != rl3[1] then rl3[1] else rl4[1];
def rl5 = if rl4 != rl4[1] then rl4[1] else rl5[1];
def rl6 = if rl5 != rl5[1] then rl5[1] else rl6[1];
def rl1c = if rl1<rl2 then 1 else 0;
def rl2c = if rl2<rl3 then 1 else 0;
def rl3c = if rl3<rl4 then 1 else 0;
def rl4c = if rl4<rl5 then 1 else 0;
def rl5c = if rl5<rl6 then 1 else 0;

def rlc  = if (rl1c+rl2c+rl3c+rl4c+rl5c)==5 then 5 else if (rl1c+rl2c+rl3c+rl4c)==4 then 4 else if (rl1c+rl2c+rl3c)==4 then 3 else if (rl1c+rl2c)==2 then 2 else if (rl1c)==1 then 1  else 0;
def rlc1  = if (rl1c+rl2c+rl3c+rl4c+rl5c)==0 then 5 else if (rl1c+rl2c+rl3c+rl4c)==0 then 4 else if (rl1c+rl2c+rl3c)==0 then 3 else if (rl1c+rl2c)==0 then 2 else if (rl1c)==0 then 1  else 0;

addlabel(HHLLlabels, if  rl1 > rl2
              then rlc1 + " Higher Lows " 
              else rlc  + " Lower Lows ", 
              if rl1 > rl2
              then color.green 
              else color.red);

input HHLLBubbles = yes;
input HHLLbubblemover = 6;
def  hb  = HHLLbubblemover;
def hb1  = hb + 1;

AddChartBubble(!IsNaN(c[hb1]) and IsNaN(c[hb]) and HHLLBubbles , c[hb1], if rl1[hb1]>rl2[hb1] then "HL " + rlc1 else "LL " + rlc , if rl1[hb1]>rl2[hb1] then color.green else Color.RED, yes);

AddChartBubble(!IsNaN(c[hb1]) and IsNaN(c[hb]) and HHLLBubbles , c[hb1], if rh1[hb1]>rh2[hb1] then "HH " + rhc else "LH " + rhc1 , if rh1[hb1]>rh2[hb1] then color.green else Color.RED, yes);

#ZigZags
def zHI;
def zLO;
zHI = if !IsNaN(High1) and  (use_highlow_zigzag_pattern==yes and PointCount == 1)
      then h else if use_highlow_zigzag_pattern==no and !isnan(High1) 
      then h else Double.NaN;
zLO = if !IsNaN(Low1)  and (use_highlow_zigzag_pattern==yes and PointCount == -1) 
      then l else if use_highlow_zigzag_pattern==no and !isnan(Low1)
      then l else Double.NaN;
plot hilowline = if !IsNaN(zHI) then zHI else zLO;
hilowline.EnableApproximation();


#Potental Pivots Identified using left side full length and a length of one to the right
input showlabels  = yes;
input showbubbles = yes;
input bubblemover_updown = 7;
input potentialbarsforward = 1;

def  x1  = if h >= Highest(h, length) and h >= Highest(h,length)[-potentialbarsforward] then 1 else x1[1] + 1;
def xx   = if x1 == 1 then xx[1] + 1 else xx[1];

AddLabel(showlabels, length + " Bars needed to confirm Last or Potental Pivot .. ", Color.WHITE);
AddLabel(showlabels, "High Pivot: " + (GetValue(x1[potentialbarsforward], 1) + potentialbarsforward) , if (GetValue(x1[potentialbarsforward], 1)+potentialbarsforward) >= length then Color.RED else Color.YELLOW);
AddChartBubble(showbubbles and xx == HighestAll(xx)
                           and xx != xx[1] 
                           and IsNaN(zHI),
                           h + bubblemover_updown * TickSize(), 
                           "P-?", Color.RED);

def  y  = if l <= Lowest(l, length) and l <= Lowest(l,length)[-potentialbarsforward] then 1 else y[1] + 1;
AddLabel(showlabels, " Low Pivot: " + (GetValue(y[potentialbarsforward], 1)+potentialbarsforward), if (GetValue(y[potentialbarsforward], 1)+potentialbarsforward) >= length then Color.GREEN else Color.YELLOW);
def yy  = if y == 1 then yy[1] + 1 else yy[1];

AddChartBubble(showbubbles and yy == HighestAll(yy)
                           and yy != yy[1]
                           and IsNaN(zLO),
                           l -  bubblemover_updown * TickSize(), 
                          "P-?", Color.GREEN, no);

input bubblemover_sideways = 6;
def  w  = bubblemover_sideways;
def w1  = w + 1;
AddChartBubble(showbubbles and !IsNaN(c[w1]) and IsNaN(c[w]), c[w1], "H:" + (GetValue(x1[w1+potentialbarsforward], 1)+potentialbarsforward), if (GetValue(x1[w1+potentialbarsforward], 1)+potentialbarsforward) >= length then Color.RED else Color.YELLOW, no);
AddChartBubble(showbubbles and !IsNaN(c[w1]) and IsNaN(c[w]), c[w1], "L:" + (GetValue(y[w1+potentialbarsforward], 1)+potentialbarsforward) , if (GetValue(y[w1+potentialbarsforward], 1)+potentialbarsforward) >= length then Color.GREEN else Color.YELLOW, no);

#Arrows
input showarrows = yes;
plot Up = showarrows and (!IsNaN(zLO) or ( yy == HighestAll(yy)
                           and yy != yy[1]
                           and IsNaN(zLO) 
                           and GetMaxValueOffset(!IsNaN(zHI), length = 500) < GetMaxValueOffset(!IsNaN(zLO), length = 500)));
Up.SetPaintingStrategy(PaintingStrategy.BOOLEAN_ARROW_UP);
Up.SetLineWeight(3);
Up.SetDefaultColor(Color.GREEN);
Up.SetHiding(showarrows == no);

plot Dn = showarrows and (!IsNaN(zHI) or ( xx == HighestAll(xx)
                           and xx != xx[1] 
                           and IsNaN(zHI)
                           and GetMaxValueOffset(!IsNaN(zHI), length = 500) > GetMaxValueOffset(!IsNaN(zLO), length = 500)));
Dn.SetPaintingStrategy(PaintingStrategy.BOOLEAN_ARROW_DOWN);
Dn.SetLineWeight(3);
Dn.SetDefaultColor(Color.RED);
Dn.SetHiding(showarrows == no);


#Linus Anchored VWAP code
input ticks = 2.0;
def LocH = (h + (TickSize() * ticks)) * v;
def LocL = (l - (TickSize() * ticks)) * v;
def LocC = c * v;

rec PC;
rec VC;
rec PC2;
rec VC2;
rec PH;
rec VH;
rec PL;
rec VL;
rec PH2;
rec VH2;
rec PL2;
rec VL2;

if Dn or Up {
    PC  = LocC;
    VC  = v;
    PC2 = PC[1];
    VC2 = VC[1];
} else {
    PC  = CompoundValue(1, LocC + PC[1], Double.NaN);
    VC  = CompoundValue(1, v + VC[1], Double.NaN);
    PC2 = CompoundValue(1, LocC + PC2[1], Double.NaN);
    VC2 = CompoundValue(1, v + VC2[1], Double.NaN);
}

if Dn {
    PH  = LocH;
    VH  = v;
    PH2 = PH[1];
    VH2 = VH[1];
} else {
    PH  = CompoundValue(1, LocH + PH[1], Double.NaN);
    VH  = CompoundValue(1, v + VH[1], Double.NaN);
    PH2 = CompoundValue(1, LocH + PH2[1], Double.NaN);
    VH2 = CompoundValue(1, v + VH2[1], Double.NaN);
}
if Up  {
    PL  = LocL;
    VL  = v;
    PL2 = PL[1];
    VL2 = VL[1];
} else {
    PL  = CompoundValue(1, LocL + PL[1], Double.NaN);
    VL  = CompoundValue(1, v + VL[1], Double.NaN);
    PL2 = CompoundValue(1, LocL + PL2[1], Double.NaN);
    VL2 = CompoundValue(1, v + VL2[1], Double.NaN);
}
input showvwaps = yes;
plot VwapC  = if !showvwaps or (Dn or Up) then Double.NaN else PC / VC;
plot VwapC2 = if !showvwaps or (Dn or Up) then Double.NaN else PC2 / VC2;
plot VwapH  = if !showvwaps or Dn then Double.NaN else PH / VH;
plot VwapL  = if !showvwaps or Up then Double.NaN else PL / VL;
plot VwapH2 = if !showvwaps or Dn then Double.NaN else PH2 / VH2;
plot VwapL2 = if !showvwaps or Up then Double.NaN else PL2 / VL2;

VwapC.SetDefaultColor(Color.YELLOW);
VwapC.SetLineWeight(2);
VwapC.HideBubble();

VwapC2.SetDefaultColor(Color.YELLOW);
VwapC2.SetLineWeight(2);
VwapC2.SetStyle(Curve.SHORT_DASH);
VwapC2.HideBubble();

VwapH.SetDefaultColor(Color.RED);
VwapH.HideBubble();

VwapL.SetDefaultColor(Color.GREEN);
VwapL.HideBubble();

VwapH2.SetDefaultColor(Color.RED);
VwapH2.SetStyle(Curve.SHORT_DASH);
VwapH2.HideBubble();

VwapL2.SetDefaultColor(Color.GREEN);
VwapL2.SetStyle(Curve.SHORT_DASH);
VwapL2.HideBubble();

## END STUDY
10:13 Paris: Voila - Have fun. Hope this helps you and76. G'night for now. Anything else you need, you know where to reach me, MyTrade or thereabouts.
10:15 MTS1: Thanks Paris & GN!
10:28 neo_theone: mobius are you safe. all is well. that was a mean one
10:31 amalia: Nube, Frank Dilernia.
10:33 Mobius: thanks neo ... yep - all is well here.  Just been busy with other things than trading.  
10:34 neo_theone: so glad. was worried because i think that you are on the barrier island under cat 5
10:34 JohnnyQuotron: neo +1
10:39 JohnnyQuotron: The LoungeArchive is current.10:45 MyBar: I need to understand interpretation of the comparison operators in relation to and as used in the following examples of time brackets. I could not find explanation in the thinkscript manual for these type of time brackets. I have come across these examples used in various scripts posted here and elsewhere. I am trying to learn and understand so that I can write scripts for my needs Thanks
SecondsFromTime(time1) == 0
SecondsTillTime(time2) == 0
SecondsFromTime(time1) > 0
SecondsTillTime(time2) > 0
SecondsFromTime(time1) < 0
SecondsTillTime(time2) < 0
SecondsFromTime(time1) >= 0
SecondsTillTime(time2) >= 0
SecondsFromTime(time1) <= 0
SecondsTillTime(time2) <= 0
10:45 amalia: Room, is there a gap of trading between 22:05-22:30PDT or is it just me?
10:46 Vimes: MyBar, read tthis first https://tlc.thinkorswim.com/center/reference/thinkScript/Functions/Date---Time.html
10:46 JohnnyQuotron: amalia.. what product?  what aggregation?
10:49 Vimes: amalia, for me yes on all index futures
10:49 Mobius: MyBar - your examples are missing the logic gates  AND , OR  so all you have is  == equal to , > greater than,  < less than, <= less than or equal to and >= greater than or equal to.
10:50 MyBar: Vimes: I aleady have read it but did not get how to interpret it.
10:51 Vimes: ok, read what mobius said, experiment a bit, and then tell us exactly waht you are trying to code
10:51 JohnnyQuotron: mobius.. in your gaussian RSI Laguerre are both the rsi and the gamma adjusted with the gaussian filter.?  It looks as if they are buy I don't do math.
10:53 Mobius: Post the code your asking about Johhny.. I wrote that a number of different ways for different purposes
10:56 Mobius: For volatile markets this intraday strategy works well. 
# Typical Price Reversal Strategy
# Mobius
# V01.10.2018
# Typical price is based on a Stochastic Average
input n = 10;
input colorCandles = yes;
def h = high;
def l = low;
def c = close;
def x = barNumber();
def nan = double.nan;
def TYP = (highest(h, n) + lowest(l, n) + c) / 3;
def dn_rev = if c crosses below TYP
             then l
             else if c > TYP
                  then nan
                  else if l < dn_rev[1]
                       then l
                       else dn_rev[1];
def dn_x = if l == dn_rev
           then x-1
           else nan;
def h_rev = if !isNaN(dn_x)
            then h[1]
            else h_rev[1];
plot l_pivot = if x >= highestAll(dn_x)
               then highestAll(if isNaN(close[-1])
                               then h_rev
                               else nan)
               else nan;
     l_pivot.SetStyle(curve.long_dash);
     l_pivot.SetLineWeight(2);
     l_pivot.SetDefaultColor(color.green);
plot ArrowUp = if c crosses above l_pivot
               then l
               else nan;
     ArrowUp.SetPaintingStrategy(PaintingStrategy.Arrow_Up);
     ArrowUp.SetLineWeight(2);
     ArrowUp.SetDefaultColor(color.green);
def up_rev = if c crosses above TYP
             then h
             else if c < TYP
                  then nan
                  else if h > up_rev[1]
                       then h
                       else up_rev[1];
def up_x = if h == up_rev
           then x-1
           else nan;
def l_rev = if !isNaN(up_x)
            then l[1]
            else l_rev[1];
plot h_pivot = if x >= highestAll(up_x)
               then highestAll(if isNaN(close[-1])
                               then l_rev
                               else nan)
               else nan;
     h_pivot.SetStyle(curve.long_dash);
     h_pivot.SetLineWeight(2);
     h_pivot.SetDefaultColor(color.red);
plot ArrowDn = if close crosses below h_pivot
               then high
               else nan;
     ArrowDn.SetPaintingStrategy(PaintingStrategy.Arrow_Down);
     ArrowDn.SetLineWeight(2);
     ArrowDn.SetDefaultColor(color.red);
AssignPriceColor(if colorCandles and c < TYP
                 then color.red
                 else if colorCandles and c > TYP
                      then color.green
                      else color.current);
# End Code Typical_Price_Strategy